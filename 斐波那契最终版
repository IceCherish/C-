#include <iostream>
#include <cstring>
#include <string>
using namespace std;
int first,result;
const int N=10000;
int num[N];

int Fib(int i)//初始函数
{
	if (i<=1)  return i;
	else  return Fib(i-1)+Fib(i-2);
}
int Fibnumber(int i)//初始调用次数
{
	if (i<3)  return 1;
	else  return Fibnumber(i-1)+Fibnumber(i-2);
}

	
int fab(int n,int first,int result){

	if(0==n)
		return 0;
	if(1==n||2==n)
		return result;
	else
	{;

		return fab(n-1,result,first+result);}
}
int Fabtnumber(int i)
{
int add=0;
	if (i<=2)
		return 1;
	else
	{
		if(num[i-1]==0)
		{
			add+=Fabtnumber(i-1);

		}
		else
			add+=1;
		if (i>=3)
		{
		   add+=1;
		}		
	}
	return add;
}
int main()
{
	int i;
	while (cin >> i)
	{
	memset(num, 0, sizeof(num));
	num[1] = 1;
	num[2] = 1;
	cout << "初始的函数所得值为："<<Fib(i)<<",调用次数为："<<Fibnumber(i)<<endl;
	cout << "改良的函数所得值为："<<fab(i,1,1)<<",调用次数为：" <<Fabtnumber(i)<< endl;
	//cout<<"改进之后的函数明显更快，在当前下"
	}
	return 0;
}


