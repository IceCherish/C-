
﻿// 斐波那契.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include "pch.h"
#include <iostream>
#include <cstring>
#include <string>
using namespace std;
int Fib_times(int i)//朴素版：当得到第i个数时的函数调用次数
{
	if (i < 3)
		return 1;
	else
		return Fib_times(i - 1) + Fib_times(i - 2);
}
int Fib(int i)//朴素版：计算第i个数的数值
{
	if (i == 1)
		return 1;
	if (i == 2)
		return 2;
	else
		return Fib(i - 1) + Fib(i - 2);
}
int num[1000000];//num[i]==1:第i个数的值已经计算过并且被记录下来了
int memory[1000000];//记录第i个数的数值
int Fib_times2(int i)//优化版：当得到第i个数时函数的调用次数
{
	int sum = 0;
	if (i < 3)
		return 1;
	else
	{
		if (num[i - 1] == 0)
		{
			sum += Fib_times2(i - 1);
			num[i - 1] = 1;
		}
		else
			sum += 1;//直接取出第i-1个数的值，不需要再进行递归调用
		if (num[i - 2] == 0)
		{
			sum += Fib_times2(i - 2);
			num[i - 2] = 1;
		}
		else
			sum += 1;
	}
	return sum;
}
int Fib2(int i)//优化版：计算第i个数的数值
{
	if (memory[i] != 0)
		return memory[i];
	if (memory[i - 1] == 0)
		memory[i - 1] = Fib2(i - 1);
	if (memory[i - 2] == 0)
		memory[i - 2] = Fib2(i - 2);
	return memory[i - 1] + memory[i - 2];
}
int main()
{
	int i;
	while (cin >> i)
	{
		memset(memory, 0, sizeof(memory));
		memset(num, 0, sizeof(num));
		num[1] = 1;
		num[2] = 1;
		memory[1] = 1;
		memory[2] = 2;
		cout << "朴素版的函数所得值为："<<Fib(i)<<",调用次数为："<<Fib_times(i)<<endl;
		cout << "改良版(引入备忘录)的函数所得值为："<<Fib2(i)<<",调用次数为：" << Fib_times2(i) << endl;
	}
	return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
